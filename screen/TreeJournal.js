import React, { useState, useMemo } from "react";
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  Modal,
  Image,
  ScrollView,
  SafeAreaView,
} from "react-native";
import { Ionicons } from "@expo/vector-icons";
import TreeList from "../components/TreeList";

const TreeJournal = () => {
  const [items, setItems] = useState({
    ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ: [
      {
        id: "1",
        name: "‡∏´‡∏ç‡πâ‡∏≤‡∏™‡∏≤‡∏¢‡∏´‡∏°‡∏≠‡∏Å üå´Ô∏è",
        progress: 1,
        imageUrl: require("../assets/Tree/Common_MistGrass.png"),
        rank: "Common",
        description:
          "‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ç‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏´‡∏∏‡∏ö‡πÄ‡∏Ç‡∏≤‡∏´‡∏°‡∏≠‡∏Å‡∏´‡∏ô‡∏≤ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏ö‡πÑ‡∏•‡πâ‡πÉ‡∏ö‡∏´‡∏ç‡πâ‡∏≤‡∏ô‡∏µ‡πâ ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏©‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏´‡∏•‡∏á‡∏ó‡∏≤‡∏á‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≤‡∏¢‡∏•‡∏°",
      },
      {
        id: "2",
        name: "‡πÄ‡∏´‡πá‡∏î‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á‡∏à‡∏¥‡πã‡∏ß üçÑ‚ú®",
        progress: 1,
        imageUrl: require("../assets/Tree/Common_TinyGlowingMushrooms.png"),
        rank: "Common",
        description:
          "‡πÄ‡∏´‡πá‡∏î‡∏ó‡∏µ‡πà‡∏™‡πà‡∏≠‡∏á‡πÅ‡∏™‡∏á‡∏™‡∏ß‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∑‡∏î ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤‡πÅ‡∏™‡∏á‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏ô‡∏≥‡∏ó‡∏≤‡∏á‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏á‡∏ó‡∏≤‡∏á‡πÉ‡∏ô‡∏õ‡πà‡∏≤",
      },
      {
        id: "3",
        name: "‡∏ß‡∏±‡∏ä‡∏û‡∏∑‡∏ä‡∏™‡∏≤‡∏¢‡∏ü‡πâ‡∏≤ ‚ö°üåø",
        progress: 0,
        imageUrl: require("../assets/Tree/Common_ThunderWeed.png"),
        rank: "Common",
        description:
          "‡∏û‡∏∑‡∏ä‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡∏û‡∏≤‡∏¢‡∏∏‡∏ü‡πâ‡∏≤‡∏Ñ‡∏∞‡∏ô‡∏≠‡∏á ‡∏°‡∏±‡∏ô‡∏™‡∏∞‡∏™‡∏°‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡πÑ‡∏ü‡∏ü‡πâ‡∏≤‡πÑ‡∏ß‡πâ‡πÉ‡∏ô‡πÄ‡∏ã‡∏•‡∏•‡πå ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡∏£‡∏π‡πâ‡∏™‡∏∂‡∏Å‡∏°‡∏µ‡∏û‡∏•‡∏±‡∏á",
      },
      {
        id: "4",
        name: "‡∏ï‡πâ‡∏ô‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏ß‡∏ô‡∏•‡∏° üîî",
        progress: 0,
        imageUrl: require("../assets/Tree/Common_WindChimes.png"),
        rank: "Common",
        description:
          "‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏î‡∏±‡∏á‡∏Å‡∏±‡∏á‡∏ß‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏¢‡∏•‡∏°‡∏û‡∏±‡∏î‡∏ú‡πà‡∏≤‡∏ô ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏´‡πâ‡∏à‡∏¥‡∏ï‡πÉ‡∏à‡∏™‡∏á‡∏ö",
      },
      {
        id: "5",
        name: "‡∏°‡∏≠‡∏™‡∏ó‡πå‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏•‡πÄ‡∏ß‡∏•‡∏≤ üï∞Ô∏è",
        progress: 1,
        imageUrl: require("../assets/Tree/Common_TheMossOfTime.png"),
        rank: "Common",
        description:
          "‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡∏ö‡∏ô‡∏Å‡πâ‡∏≠‡∏ô‡∏´‡∏¥‡∏ô‡πÇ‡∏ö‡∏£‡∏≤‡∏ì ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏´‡∏≤‡∏Å‡∏à‡∏±‡∏ö‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏±‡∏ô ‡∏≠‡∏≤‡∏à‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô‡∏≠‡∏î‡∏µ‡∏ï",
      },
      {
        id: "6",
        name: "‡∏î‡∏≠‡∏Å‡∏î‡∏≤‡∏ß‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå ü™ê ",
        progress: 1,
        imageUrl: require("../assets/Tree/Common_PlanetFlower.png"),
        rank: "Common",
        description:
          "‡∏°‡∏µ‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡∏î‡∏ß‡∏á‡∏î‡∏≤‡∏ß‡∏´‡∏°‡∏∏‡∏ô‡∏£‡∏≠‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡πÄ‡∏Å‡πá‡∏ö‡∏û‡∏•‡∏±‡∏á‡∏á‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡∏à‡∏±‡∏Å‡∏£‡∏ß‡∏≤‡∏•",
      },
      {
        id: "7",
        name: "‡πÄ‡∏´‡πá‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö üåÄ",
        progress: 1,
        imageUrl: require("../assets/Tree/Common_WhisperingMushroom.png"),
        rank: "Common",
        description: "‡∏´‡∏≤‡∏Å‡πÄ‡∏≠‡∏≤‡∏´‡∏π‡πÅ‡∏ô‡∏ö‡πÉ‡∏Å‡∏•‡πâ ‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏¢‡∏¥‡∏ô‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡∏£‡∏∞‡∏ã‡∏¥‡∏ö‡∏Ç‡∏≠‡∏á‡πÇ‡∏•‡∏Å‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì",
      },
      {
        id: "8",
        name: "‡∏ï‡πâ‡∏ô‡πÄ‡∏á‡∏≤‡πÅ‡∏´‡πà‡∏á‡∏£‡∏±‡∏ï‡∏ï‡∏¥‡∏Å‡∏≤‡∏• üåë",
        progress: 0,
        imageUrl: require("../assets/Tree/Common_ShadowTreeOfTheNight.png"),
        rank: "Common",
        description: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏™‡∏µ‡∏î‡∏≥‡∏ó‡∏µ‡πà‡∏á‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏ó‡∏µ‡πà‡∏î‡∏ß‡∏á‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå‡πÄ‡∏ï‡πá‡∏°‡∏î‡∏ß‡∏á",
      },
      {
        id: "9",
        name: "‡πÑ‡∏°‡πâ‡πÄ‡∏•‡∏∑‡πâ‡∏≠‡∏¢‡∏™‡∏µ‡∏£‡∏∏‡πâ‡∏á üåà",
        progress: 0,
        imageUrl: require("../assets/Tree/Common_RainbowVine.png"),
        rank: "Common",
        description: "‡∏ß‡πà‡∏≤‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤ ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏Å‡∏•‡πâ",
      },
    ],
    ‡∏´‡∏≤‡∏¢‡∏≤‡∏Å: [
      {
        id: "1",
        name: "‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≤‡∏õ üî•üå∫",
        progress: 1,
        imageUrl: require("../assets/Tree/Uncommon_CursedFlower.png"),
        rank: "Uncommon",
        description:
          "‡πÄ‡∏•‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ‡∏ô‡∏µ‡πâ‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏Ç‡∏≠‡∏á‡πÅ‡∏°‡πà‡∏°‡∏î ‡∏°‡∏µ‡πÄ‡∏™‡∏ô‡πà‡∏´‡πå‡∏î‡∏∂‡∏á‡∏î‡∏π‡∏î‡πÅ‡∏ï‡πà‡∏™‡∏±‡∏°‡∏ú‡∏±‡∏™‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡∏°‡∏¥‡∏â‡∏∞‡∏ô‡∏±‡πâ‡∏ô‡∏Ñ‡∏≥‡∏™‡∏≤‡∏õ‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡∏ß‡πÑ‡∏õ",
      },
      {
        id: "2",
        name: "‡∏ö‡∏≠‡∏ô‡πÑ‡∏ã‡∏´‡∏°‡∏≠‡∏Å‡∏°‡∏≤‡∏¢‡∏≤ üå´Ô∏èüå≥",
        progress: 1,
        imageUrl: require("../assets/Tree/Uncommon_MirageBonsai.png"),
        rank: "Uncommon",
        description:
          "‡∏ö‡∏≠‡∏ô‡πÑ‡∏ã‡∏ó‡∏µ‡πà‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï‡πÉ‡∏ô‡πÇ‡∏•‡∏Å‡πÅ‡∏´‡πà‡∏á‡πÄ‡∏á‡∏≤ ‡∏°‡∏≠‡∏á‡∏î‡∏π‡∏à‡∏≤‡∏Å‡∏°‡∏∏‡∏°‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ ‡πÅ‡∏ï‡πà‡∏°‡∏∏‡∏°‡∏≠‡∏∑‡πà‡∏ô‡∏à‡∏∞‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏°‡∏≠‡∏Å‡∏à‡∏≤‡∏á",
      },
      {
        id: "3",
        name: "‡πÄ‡∏´‡πá‡∏î‡∏à‡∏±‡∏ô‡∏ó‡∏£‡∏≤ üçÑüåô",
        progress: 1,
        imageUrl: require("../assets/Tree/Uncommon_MoonMushroom.png"),
        rank: "Uncommon",
        description:
          "‡πÄ‡∏´‡πá‡∏î‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á‡πÉ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∑‡∏î ‡∏ß‡πà‡∏≤‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤‡πÅ‡∏™‡∏á‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏π‡∏î‡∏ã‡∏±‡∏ö‡∏û‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏î‡∏ß‡∏á‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå",
      },
      {
        id: "4",
        name: "‡∏î‡∏≠‡∏Å‡∏™‡∏∏‡∏£‡∏¥‡∏¢‡∏≤ ‚òÄÔ∏èüå∫",
        progress: 0,
        imageUrl: require("../assets/Tree/Uncommon_SunFlower.png"),
        rank: "Uncommon",
        description:
          "‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏≠‡∏á‡πÅ‡∏™‡∏á‡πÅ‡∏£‡∏á‡∏Å‡∏ß‡πà‡∏≤‡∏î‡∏ß‡∏á‡∏≠‡∏≤‡∏ó‡∏¥‡∏ï‡∏¢‡πå ‡∏ß‡πà‡∏≤‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤‡πÉ‡∏Ñ‡∏£‡∏ó‡∏µ‡πà‡∏û‡∏ö‡πÄ‡∏´‡πá‡∏ô‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡πÇ‡∏ä‡∏Ñ‡∏î‡∏µ‡πÑ‡∏õ 1 ‡∏õ‡∏µ‡πÄ‡∏ï‡πá‡∏°",
      },
      {
        id: "5",
        name: "‡πÄ‡∏´‡πá‡∏î‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏û‡∏•‡∏á üçÑ üé∂",
        progress: 0,
        imageUrl: require("../assets/Tree/Uncommon_MusicalMushrooms.png"),
        rank: "Uncommon",
        description:
          "‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏à‡∏≤‡∏Å‡πÄ‡∏´‡πá‡∏î‡∏à‡∏∞‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ï‡∏¥‡∏î‡πÉ‡∏à‡∏™‡∏á‡∏ö‡∏Ç‡∏∂‡πâ‡∏ô - ‚Äú‡∏•‡∏∑‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏Ñ‡∏£‡∏µ‡∏¢‡∏î‡πÜ ‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏≤‡∏ü‡∏±‡∏á‡πÄ‡∏û‡∏•‡∏á‡∏Ç‡∏≠‡∏á‡∏â‡∏±‡∏ô‡∏Å‡∏±‡∏ô",
      },
      {
        id: "6",
        name: "‡πÄ‡∏´‡πá‡∏î‡∏Å‡∏£‡∏∞‡∏à‡∏Å‡πÅ‡∏´‡πà‡∏á‡∏°‡∏¥‡∏ï‡∏¥ ü™û",
        progress: 1,
        imageUrl: require("../assets/Tree/Uncommon_DimensionalMirrorMushroom.png"),
        rank: "Uncommon",
        description: "‡∏™‡∏∞‡∏ó‡πâ‡∏≠‡∏ô‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡πÇ‡∏•‡∏Å‡∏≠‡∏µ‡∏Å‡∏î‡πâ‡∏≤‡∏ô‡∏´‡∏ô‡∏∂‡πà‡∏á ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÉ‡∏Ñ‡∏£‡∏°‡∏≠‡∏á‡πÄ‡∏´‡πá‡∏ô",
      },
    ],
    ‡∏û‡∏¥‡πÄ‡∏®‡∏©: [
      {
        id: "1",
        name: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏™‡∏≤‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏î‡∏°‡∏±‡∏á‡∏Å‡∏£ üêâüå≤",
        progress: 0,
        imageUrl: require("../assets/Tree/Rare_DragonBloodTree.png"),
        rank: "Rare",
        description:
          "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏´‡∏•‡πÄ‡∏ß‡∏µ‡∏¢‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏£‡∏ã‡∏¥‡∏ô‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÄ‡∏Ç‡πâ‡∏°‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢‡πÇ‡∏•‡∏´‡∏¥‡∏ï‡∏°‡∏±‡∏á‡∏Å‡∏£ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤‡πÉ‡∏Ñ‡∏£‡∏î‡∏∑‡πà‡∏°‡∏°‡∏±‡∏ô‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏´‡πà‡∏á‡∏°‡∏±‡∏á‡∏Å‡∏£",
      },
      {
        id: "2",
        name: "‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡πÄ‡∏á‡∏≤‡∏û‡∏£‡∏∞‡∏à‡∏±‡∏ô‡∏ó‡∏£‡πå üåôüå∏",
        progress: 1,
        imageUrl: require("../assets/Tree/Rare_MoonshadowSakura.png"),
        rank: "Rare",
        description:
          "‡∏ã‡∏≤‡∏Å‡∏∏‡∏£‡∏∞‡∏ó‡∏µ‡πà‡∏ö‡∏≤‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏î‡∏±‡∏ö ‡∏î‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏•‡∏∞‡∏≠‡∏≠‡∏á‡πÄ‡∏£‡∏∑‡∏≠‡∏á‡πÅ‡∏™‡∏á‡∏£‡∏≤‡∏ß‡∏Å‡∏±‡∏ö‡∏´‡∏°‡∏π‡πà‡∏î‡∏≤‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡∏Å‡∏•‡∏á‡∏°‡∏≤",
      },
      {
        id: "3",
        name: "‡∏ï‡πâ‡∏ô‡∏ù‡∏±‡∏ô‡∏î‡∏µ üåúüå≤",
        progress: 1,
        imageUrl: require("../assets/Tree/Rare_GoodnightTree.png"),
        rank: "Rare",
        description: "‡∏•‡∏∞‡∏≠‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÉ‡∏ö‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÇ‡∏î‡∏ô‡∏™‡∏±‡∏°‡∏û‡∏±‡∏™‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏î‡πÉ‡∏™",
      },
      {
        id: "4",
        name: "‡∏ï‡πâ‡∏ô‡∏™‡∏ô‡∏´‡∏°‡∏∑‡πà‡∏ô‡πÄ‡∏á‡∏≤ üå≤",
        progress: 1,
        imageUrl: require("../assets/Tree/Rare_TenThousandShadowsPineTree.png"),
        rank: "Rare",
        description:
          "‡∏õ‡∏•‡∏î‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏á‡∏≤‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏ï‡πâ‡∏ô‡∏£‡∏≥‡πÉ‡∏ô‡∏¢‡∏≤‡∏°‡∏Ñ‡πà‡∏≥‡∏Ñ‡∏∑‡∏ô ‡∏ú‡∏π‡πâ‡πÉ‡∏î‡∏ó‡∏µ‡πà‡∏û‡∏ö‡πÄ‡∏´‡πá‡∏ô‡∏à‡∏∞‡∏ó‡∏∏‡∏Å‡πÄ‡∏á‡∏≤‡∏à‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÑ‡∏õ",
      },
    ],
    ‡∏°‡∏´‡∏≤‡∏Å‡∏≤‡∏û‡∏¢‡πå: [
      {
        id: "1",
        name: "‡∏ï‡πâ‡∏ô‡∏û‡∏§‡∏Å‡∏©‡∏≤‡πÄ‡∏ó‡∏û üëë",
        progress: 1,
        imageUrl: require("../assets/Tree/Epic_TheTreeOfGods.png"),
        rank: "Epic",
        description: "‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤‡πÄ‡∏ó‡∏û‡∏ú‡∏π‡πâ‡πÄ‡∏ù‡πâ‡∏≤‡∏õ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡∏õ‡∏•‡∏π‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤",
      },
      {
        id: "2",
        name: "‡∏î‡∏≠‡∏Å‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏±‡∏á",
        progress: 1,
        imageUrl: require("../assets/Tree/Epic_FlowerOfHope.png"),
        rank: "Epic",
        description:
          "‡∏î‡∏≠‡∏Å‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏π‡∏Å‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏±‡∏á‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏≤‡∏Å‡∏à‡∏∞‡πÑ‡∏õ‡∏ñ‡∏∂‡∏á‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï ‡∏ó‡∏∏‡∏Å‡∏Å‡∏•‡∏µ‡∏ö‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô‡πÄ‡∏ï‡πá‡∏°‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏£‡∏≤‡∏£‡∏ñ‡∏ô‡∏≤‡πÉ‡∏´‡πâ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏°‡∏±‡∏ô‡πÑ‡∏õ‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡∏™‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏™‡∏¥‡πà‡∏á!",
      },
    ],
    ‡∏ï‡∏≥‡∏ô‡∏≤‡∏ô: [
      {
        id: "1",
        name: "‡∏ï‡πâ‡∏ô‡πÇ‡∏•‡∏Å‡∏≤ üåéüå≥",
        progress: 0,
        imageUrl: require("../assets/Tree/Legendary_EtherealYggdrasil.png"),
        rank: "Legendary",
        description:
          "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÉ‡∏ô‡∏ï‡∏≥‡∏ô‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏Å‡∏•‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏à‡∏±‡∏Å‡∏£‡∏ß‡∏≤‡∏• ‡∏£‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô‡πÅ‡∏ú‡πà‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏ó‡∏∏‡∏Å‡∏°‡∏¥‡∏ï‡∏¥ ‡∏Å‡∏¥‡πà‡∏á‡∏Å‡πâ‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô‡πÇ‡∏≠‡∏ö‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏á‡∏î‡∏≤‡∏ß",
      },
      {
        id: "2",
        name: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÅ‡∏´‡πà‡∏á‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏£‡∏•‡∏∏",
        progress: 1,
        imageUrl: require("../assets/Tree/Legendary_TreeOfAttainment.png"),
        rank: "Legendary",
        description:
          "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡∏•‡∏π‡∏Å‡∏î‡∏π‡πÅ‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏™‡πà‡πÉ‡∏à‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏¥‡∏ö‡πÇ‡∏ï ‡∏°‡∏±‡∏ô‡∏à‡∏∞‡∏ô‡∏≥‡∏û‡∏≤‡∏ú‡∏π‡πâ‡∏õ‡∏•‡∏π‡∏Å‡πÑ‡∏õ‡∏™‡∏π‡πà‡∏Å‡∏≤‡∏£‡∏ö‡∏£‡∏£‡∏•‡∏∏‡∏ñ‡∏∂‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à‡πÉ‡∏ô‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏Å‡∏£‡∏ß‡∏≤‡∏•",
      },
      {
        id: "3",
        name: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏Ç‡∏≠‡∏á‡∏à‡∏≠‡∏°‡∏°‡∏≤‡∏£",
        progress: 0,
        imageUrl: require("../assets/Tree/Legendary_TheDemonLord_sTree.png"),
        rank: "Legendary",
        description:
          "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏°‡∏°‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏Ç‡πà‡∏ô‡∏Ü‡πà‡∏≤‡∏•‡πâ‡∏≤‡∏á‡πÄ‡∏ú‡πà‡∏≤‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå ‡πÑ‡∏î‡πâ‡∏õ‡∏•‡∏π‡∏Å‡πÄ‡∏≠‡∏≤‡πÑ‡∏ß‡πâ ‡∏°‡∏µ‡πÄ‡∏õ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡∏≥‡∏ó‡∏°‡∏¥‡∏¨‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏ú‡πà‡πÑ‡∏õ‡∏ó‡∏±‡πà‡∏ß‡∏î‡∏¥‡∏ô ‡∏ã‡∏∂‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏≤‡∏¢‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏•‡∏≤‡∏¢‡∏•‡πâ‡∏≤‡∏á!",
      },
      {
        id: "4",
        name: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏Ç‡∏≠‡∏á‡πÄ‡∏ó‡∏û‡πÄ‡∏à‡πâ‡∏≤",
        progress: 1,
        imageUrl: require("../assets/Tree/Legendary_TreeOfTheGods.png"),
        rank: "Legendary",
        description:
          "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏ó‡∏û‡πÄ‡∏à‡πâ‡∏≤‡∏ú‡∏π‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÑ‡∏î‡πâ‡∏õ‡∏•‡∏π‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô ‡∏î‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô‡πÄ‡∏õ‡∏•‡πà‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏¢‡∏£‡∏∞‡∏¢‡∏¥‡∏ö‡∏£‡∏∞‡∏¢‡∏±‡∏ö‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡πÅ‡∏Ç‡πá‡∏á‡πÅ‡∏Å‡∏£‡πà‡∏á ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏û‡∏•‡∏±‡∏á‡∏ö‡∏£‡∏¥‡∏™‡∏∏‡∏ó‡∏ò‡∏¥‡πå‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏ó‡∏û‡πÄ‡∏à‡πâ‡∏≤!",
      },
      {
        id: "5",
        name: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏±‡∏ô",
        progress: 0,
        imageUrl: require("../assets/Tree/Legendary_TreeOfDreams.png"),
        rank: "Legendary",
        description:
          "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ù‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏∏‡πà‡∏á‡∏´‡∏ß‡∏±‡∏á‡∏ñ‡∏∂‡∏á‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡∏ó‡∏µ‡πà‡∏î‡∏µ ‡∏î‡∏≠‡∏Å‡∏Ç‡∏≠‡∏á‡∏°‡∏±‡∏ô‡∏™‡∏∞‡∏ó‡πâ‡∏≠‡∏ô‡πÅ‡∏™‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏±‡∏á ‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡πÅ‡∏£‡∏á‡∏ö‡∏±‡∏ô‡∏î‡∏≤‡∏•‡πÉ‡∏à‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≠‡πÑ‡∏õ!",
      },
      {
        id: "6",
        name: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ú‡∏µ‡∏™‡∏¥‡∏á",
        progress: 1,
        imageUrl: require("../assets/Tree/Legendary_HauntedTree.png"),

        rank: "Legendary",
        description:
          "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ ‡πÅ‡∏ï‡πà‡∏°‡∏±‡∏ô‡πÅ‡∏ù‡∏á‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢‡∏û‡∏•‡∏±‡∏á‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏∑‡∏î ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏∏‡∏ì‡∏•‡∏∞‡∏™‡∏≤‡∏¢‡∏ï‡∏≤‡∏à‡∏≤‡∏Å‡∏°‡∏±‡∏ô‡πÑ‡∏õ ‡∏≠‡∏≤‡∏à‡∏à‡∏∞‡∏û‡∏ö‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ô‡πà‡∏≤‡∏Å‡∏•‡∏±‡∏ß!",
      },
      {
        id: "7",
        name: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÅ‡∏´‡πà‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏≤‡∏î‡∏Å‡∏•‡∏±‡∏ß",
        progress: 0,
        imageUrl: require("../assets/Tree/Legendary_TreeOfFear.png"),
        rank: "Legendary",
        description: "‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏°‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏´‡∏ß‡∏≤‡∏î‡∏Å‡∏•‡∏±‡∏ß‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏û‡∏ö‡πÄ‡∏´‡πá‡∏ô",
      },
    ],
  });

  const rarityStyles = StyleSheet.create({
    Common: {
      color: "#7D7D7D",
      fontFamily: "SenSemibold",
    },
    Uncommon: {
      color: "#1E90FF",
      fontFamily: "SenSemibold",
    },
    Rare: {
      color: "#7B68EE",
      fontFamily: "SenSemibold",
    },
    Epic: {
      color: "#FF8C00",
      fontFamily: "SenSemibold",
    },
    Legendary: {
      color: "#FFBF00",
      fontFamily: "SenSemibold",
    },
  });

  const [selectedCategory, setSelectedCategory] = useState("‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ");
  const [selectedTree, setSelectedTree] = useState(null);
  const [modalVisible, setModalVisible] = useState(false);

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const calculateUnlockedCount = (category) => {
    const categoryItems = items[category];
    if (!categoryItems || categoryItems.length === 0)
      return { unlocked: 0, total: 0 };
    const unlockedCount = categoryItems.filter(
      (item) => item.progress > 0
    ).length;
    return { unlocked: unlockedCount, total: categoryItems.length };
  };

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡πÅ‡∏•‡∏∞‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const categoryUnlockedCount = useMemo(() => {
    const { unlocked } = calculateUnlockedCount(selectedCategory);
    return unlocked;
  }, [selectedCategory]);

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const categoryTotalCount = useMemo(() => {
    const { total } = calculateUnlockedCount(selectedCategory);
    return total;
  }, [selectedCategory]);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà
  const handleCategorySelect = (category) => setSelectedCategory(category);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ
  const handleTreePress = (tree) => {
    setSelectedTree(tree);
    setModalVisible(true);
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÉ‡∏ô‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const renderItems = () => {
    const categoryItems = items[selectedCategory];

    const sortedItems = [...categoryItems].sort((a, b) => {
      // ‡πÄ‡∏≠‡∏≤‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡πÑ‡∏ß‡πâ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
      if (a.progress > 0 && b.progress === 0) return -1;
      if (a.progress === 0 && b.progress > 0) return 1;
      return 0;
    });

    return sortedItems.map((item) => (
      <TreeList
        key={item.id}
        imageUrl={item.imageUrl}
        treeName={item.name}
        treeRank={item.rank}
        isUnlocked={item.progress > 0}
        onPress={() => handleTreePress(item)}
      />
    ));
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ
  const handleUnlockTree = () => {
    if (!selectedTree) return;

    // ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö ID ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï progress
    const updatedItems = { ...items };
    const categoryTrees = updatedItems[selectedCategory].map((tree) => {
      if (tree.id === selectedTree.id) {
        return { ...tree, progress: 1 }; // ‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ
      }
      return tree;
    });

    updatedItems[selectedCategory] = categoryTrees;
    setSelectedTree({ ...selectedTree, progress: 1 }); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÉ‡∏ô modal
    setItems(updatedItems); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  };

  return (
    <View style={styles.outerContainer}>
      <SafeAreaView style={{ flex: 1 }}>
        <View style={styles.container}>
          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà */}
          <View style={styles.categoryButtons}>
            {["‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ", "‡∏´‡∏≤‡∏¢‡∏≤‡∏Å", "‡∏û‡∏¥‡πÄ‡∏®‡∏©", "‡∏°‡∏´‡∏≤‡∏Å‡∏≤‡∏û‡∏¢‡πå", "‡∏ï‡∏≥‡∏ô‡∏≤‡∏ô"].map(
              (category) => {
                const isSelected = selectedCategory === category;
                return (
                  <TouchableOpacity
                    key={category}
                    onPress={() => handleCategorySelect(category)}
                    style={[
                      styles.categoryButton,
                      isSelected && styles.selectedButton,
                    ]}
                  >
                    <Text
                      style={[
                        styles.categoryText,
                        isSelected && styles.selectedText,
                      ]}
                    >
                      {category}
                    </Text>
                  </TouchableOpacity>
                );
              }
            )}
          </View>

          {/* ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πâ‡∏≤‡∏ß‡∏´‡∏ô‡πâ‡∏≤ */}
          <Text style={styles.progressText}>
            {`‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ‡πÅ‡∏•‡πâ‡∏ß ${categoryUnlockedCount} / ${categoryTotalCount} ‡∏ï‡πâ‡∏ô`}
          </Text>
          {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ */}
          <View style={styles.itemContainer}>
            <View style={styles.itemList}>{renderItems()}</View>
          </View>
        </View>
      </SafeAreaView>

      {/* Modal ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ */}
      <Modal
        visible={modalVisible}
        transparent
        animationType="slide"
        onRequestClose={() => setModalVisible(false)}
      >
        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î */}
        <View style={styles.CloseButton}>
          <TouchableOpacity
            style={styles.modalCloseButton}
            onPress={() => setModalVisible(false)}
          >
            <Ionicons name="close" size={28} color="#F2B501" />
          </TouchableOpacity>
        </View>
        <View style={styles.modalOverlay}>
          <View style={styles.modalContent}>
            {/* ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ */}
            <ScrollView contentContainerStyle={{ alignItems: "center" }}>
              {selectedTree && (
                <>
                  <View style={styles.modalImageContent}>
                    <Image
                      source={
                        typeof selectedTree.imageUrl === "string"
                          ? { uri: selectedTree.imageUrl }
                          : selectedTree.imageUrl
                      }
                      style={[
                        styles.modalImage,
                        selectedTree.progress === 0 && { opacity: 0.5 },
                      ]}
                    />
                  </View>
                  {selectedTree.progress > 0 ? (
                    <>
                      <Text style={styles.modalTitle}>{selectedTree.name}</Text>
                      <Text
                        style={[
                          styles.modalRank,
                          rarityStyles[selectedTree.rank],
                        ]}
                      >
                        {selectedTree.rank}
                      </Text>
                      <Text style={styles.modalDescription}>
                        -----------------------------------
                      </Text>
                      <Text style={styles.modalDescription}>
                        {selectedTree.description}
                      </Text>
                    </>
                  ) : (
                    <>
                      <Text style={styles.modalTitleUnknown}>
                        ‚ñë‚ñí‚ñì‚ñà‚ñà ‚úñÔ∏è Unknown ‚úñÔ∏è ‚ñà‚ñà‚ñì‚ñí‚ñë"
                      </Text>
                      <TouchableOpacity
                        style={styles.unlockButton}
                        onPress={handleUnlockTree}
                      >
                        <Text style={styles.unlockButtonText}>‡∏õ‡∏•‡∏î‡∏•‡πá‡∏≠‡∏Ñ</Text>
                      </TouchableOpacity>
                    </>
                  )}
                </>
              )}
            </ScrollView>
          </View>
        </View>
      </Modal>
    </View>
  );
};

const styles = StyleSheet.create({
  outerContainer: {
    flex: 1,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "#F2B501",
    paddingTop: 20,
  },
  container: {
    flex: 1,
    padding: 20,
    justifyContent: "center",
    alignItems: "center",
    backgroundColor: "#E8E8E8",
    borderTopRightRadius:30,
    borderTopLeftRadius:30,
    paddingBottom: 32,
  },
  categoryButtons: {
    flexDirection: "row",
    justifyContent: "space-between",
    marginBottom: 10,
    paddingHorizontal: 10,
    paddingVertical: 6,
  },
  categoryButton: {
    paddingVertical: 6,
    paddingHorizontal: 12,
    backgroundColor: "#C3C6CF",
    borderRadius: 10,
    marginHorizontal: 4,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 5,
    elevation: 2,
  },
  selectedButton: {
    backgroundColor: "#343334",
  },
  categoryText: {
    fontFamily: "Mitr_Regular",
    fontSize: 14,
    color: "#FFFCF3",
  },
  selectedText: {
    color: "#fff",
  },
  progressText: {
    color: "#9B9B9B",
    fontFamily: "Mitr_Regular",
    fontSize: 14,
    marginBottom: 10,
    textAlign: "center",
  },
  itemContainer: {
    flex: 1,
    padding: 10,
    alignItems: "center",
    marginTop: 10,
  },
  itemList: {
    flexDirection: "row",
    flexWrap: "wrap",
    justifyContent: "space-between",
    width: "100%",
    alignItems: "center",
  },
  modalOverlay: {
    flex: 1,
    backgroundColor: "rgba(0,0,0,0.5)",
    justifyContent: "center",
    alignItems: "center",
  },
  modalContent: {
    width: "80%",
    backgroundColor: "#FFFFFF",
    padding: 20,
    borderRadius: 20,
    alignItems: "center",
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 4,
    elevation: 5,
  },
  modalImageContent: {
    width: 280,
    height: 250,
    borderRadius: 20,
    marginBottom: 10,
    overflow: "hidden",
    backgroundColor: "#F2ECE0",
    justifyContent: "flex-end",
    alignItems: "center",
    borderWidth: 2,
    borderColor: "#E6D8CD",
  },
  modalImage: {
    width: 250,
    height: 250,
    resizeMode: "cover",
    borderRadius: 12,
  },
  modalTitle: {
    fontSize: 16,
    color: "#343334",
    fontFamily: "Mitr_Regular",
    marginTop: 10,
    textAlign: "center",
  },
  modalRank: {
    fontSize: 14,
    fontFamily: "Mitr_Regular",
    marginTop: 5,
    textAlign: "center",
  },
  modalDescription: {
    fontSize: 14,
    color: "#9b9b9b",
    textAlign: "center",
    fontFamily: "Mitr_Regular",
    marginBottom: 5,
  },
  CloseButton: {
    position: "absolute",
    top: 185,
    right: 20,
    zIndex: 2,
  },
  modalCloseButton: {
    backgroundColor: "#fff",
    borderRadius: 20,
    padding: 5,
    shadowColor: "#000",
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 5,
    elevation: 6,
  },
  unlockButton: {
    marginTop: 15,
    backgroundColor: "#343334",
    paddingVertical: 10,
    paddingHorizontal: 20,
    borderRadius: 10,
  },
  unlockButtonText: {
    color: "#fff",
    fontSize: 16,
    fontFamily: "Mitr_Regular",
    textAlign: "center",
  },
  modalTitleUnknown: {
    fontSize: 16,
    color: "#9B9B9B",
    fontFamily: "Mitr_Regular",
    marginTop: 10,
    textAlign: "center",
  },
});

export default TreeJournal;
